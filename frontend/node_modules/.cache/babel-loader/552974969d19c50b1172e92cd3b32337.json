{"ast":null,"code":"var _jsxFileName = \"/Users/alex/Documents/Code/Personal/Personal/src/contexts/ServicesContext.js\";\nimport React, { createContext, useState } from 'react';\nimport axios from 'axios';\nexport const ServicesContext = createContext();\n\nconst ServicesContextProvider = props => {\n  const [services, setServices] = useState([]);\n\n  const fetchServices = value => {\n    axios.get(`http://localhost:8080/services/${value}`).then(response => {\n      setServices(response.data);\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(ServicesContext.Provider, {\n    value: {\n      services,\n      fetchServices\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 5\n    }\n  }, props.children);\n};\n\nexport default ServicesContextProvider;","map":{"version":3,"sources":["/Users/alex/Documents/Code/Personal/Personal/src/contexts/ServicesContext.js"],"names":["React","createContext","useState","axios","ServicesContext","ServicesContextProvider","props","services","setServices","fetchServices","value","get","then","response","data","children"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,QAA/B,QAA+C,OAA/C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAO,MAAMC,eAAe,GAAGH,aAAa,EAArC;;AAEP,MAAMI,uBAAuB,GAAGC,KAAK,IAAI;AACvC,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BN,QAAQ,CAAC,EAAD,CAAxC;;AAEA,QAAMO,aAAa,GAAGC,KAAK,IAAI;AAC7BP,IAAAA,KAAK,CAACQ,GAAN,CAAW,kCAAiCD,KAAM,EAAlD,EACCE,IADD,CACMC,QAAQ,IAAI;AAChBL,MAAAA,WAAW,CAACK,QAAQ,CAACC,IAAV,CAAX;AACD,KAHD;AAID,GALD;;AAOA,sBACE,oBAAC,eAAD,CAAiB,QAAjB;AAA0B,IAAA,KAAK,EAAE;AAAEP,MAAAA,QAAF;AAAYE,MAAAA;AAAZ,KAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGH,KAAK,CAACS,QADT,CADF;AAKD,CAfD;;AAiBA,eAAeV,uBAAf","sourcesContent":["import React, { createContext, useState } from 'react';\nimport axios from 'axios'\n\nexport const ServicesContext = createContext();\n\nconst ServicesContextProvider = props => {\n  const [services, setServices] = useState([])\n\n  const fetchServices = value => {\n    axios.get(`http://localhost:8080/services/${value}`)\n    .then(response => {\n      setServices(response.data)\n    })\n  }\n\n  return (\n    <ServicesContext.Provider value={{ services, fetchServices }}>\n      {props.children}\n    </ServicesContext.Provider>\n  );\n}\n\nexport default ServicesContextProvider;"]},"metadata":{},"sourceType":"module"}