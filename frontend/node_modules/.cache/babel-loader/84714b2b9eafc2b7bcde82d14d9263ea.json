{"ast":null,"code":"var _jsxFileName = \"/Users/alex/Documents/Code/Personal/Personal/src/components/global/Sidebar.js\";\nimport React, { useContext, useState, useEffect } from 'react';\nimport logo from '../../assets/images/dd2.jpg';\nimport { GrSync } from 'react-icons/gr';\nimport ReactModal from 'react-modal';\nimport Modal from '../modals/Modal';\nimport { SelectedItemsContext } from '../../contexts/SelectedItemsContext';\nimport { CarsContext } from '../../contexts/CarsContext';\nimport { RepairsContext } from '../../contexts/RepairsContext';\nexport default function Sidebar() {\n  const {\n    selectCar\n  } = useContext(SelectedItemsContext);\n  const {\n    cars,\n    fetchCars,\n    changeCarStatus,\n    selectedTab,\n    selectTab\n  } = useContext(CarsContext);\n  const {\n    fetchRepairs\n  } = useContext(RepairsContext);\n  const [showModal, setModal] = useState(false);\n  const [activeLink, setActiveLink] = useState(null); // const [selectedTab, setSelectedTab] = useState(null)\n\n  const [isCarExist, setIsCarExist] = useState(false);\n  const [searchInputValue, setSearchInputValue] = useState('');\n  const [isSearchLegit, setIsSearchLegit] = useState(false);\n  useEffect(() => {\n    selectTab(0);\n    fetchCars();\n  }, []);\n\n  const handleClick = id => {\n    setActiveLink(id);\n    fetchRepairs(id);\n    selectCar(id);\n  };\n\n  const handleOpenModal = () => {\n    setModal(true);\n  };\n\n  const handleCloseModal = () => {\n    setModal(false);\n    fetchCars();\n  };\n\n  const displayCars = () => cars.map(car => {\n    return /*#__PURE__*/React.createElement(\"li\", {\n      key: car._id,\n      className: 'sidebar-item ' + (car._id === activeLink ? 'active-item' : ''),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"plate\",\n      onClick: () => handleClick(car._id),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }\n    }, car.plate), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"changeBtn\",\n      onClick: () => changeCarStatus(car._id, car.status),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(GrSync, {\n      color: \"red\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 12\n      }\n    })));\n  });\n\n  return cars.length ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"sidebar\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"logo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    className: \"logo-image\",\n    src: logo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"logo-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }\n  }, \"GaragePanel\")), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: handleOpenModal,\n    className: \"new btn btn-active\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }\n  }, \"New\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"categories\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: 'category ' + (selectedTab === 0 ? 'active-category' : ''),\n    onClick: () => selectTab(0),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }\n  }, \"active\"), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"divider\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }\n  }, \" / \"), /*#__PURE__*/React.createElement(\"span\", {\n    className: 'category ' + (selectedTab === 1 ? 'active-category' : ''),\n    onClick: () => selectTab(1),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }\n  }, \"waiting\")), /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"sidebar-list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }\n  }, displayCars()), /*#__PURE__*/React.createElement(ReactModal, {\n    className: \"modal-wrapper\",\n    overlayClassName: \"modal-overlay\",\n    isOpen: showModal,\n    contentLabel: \"onRequestClose Example\",\n    ariaHideApp: false,\n    onRequestClose: handleCloseModal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Modal, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"closeModal\",\n    onClick: handleCloseModal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 9\n    }\n  }, \"close\"))) : /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"code\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }\n  }, \"no cars in your garage!\"));\n}","map":{"version":3,"sources":["/Users/alex/Documents/Code/Personal/Personal/src/components/global/Sidebar.js"],"names":["React","useContext","useState","useEffect","logo","GrSync","ReactModal","Modal","SelectedItemsContext","CarsContext","RepairsContext","Sidebar","selectCar","cars","fetchCars","changeCarStatus","selectedTab","selectTab","fetchRepairs","showModal","setModal","activeLink","setActiveLink","isCarExist","setIsCarExist","searchInputValue","setSearchInputValue","isSearchLegit","setIsSearchLegit","handleClick","id","handleOpenModal","handleCloseModal","displayCars","map","car","_id","plate","status","length"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,QAA5B,EAAsCC,SAAtC,QAAuD,OAAvD;AACA,OAAOC,IAAP,MAAiB,6BAAjB;AACA,SAASC,MAAT,QAAuB,gBAAvB;AACA,OAAOC,UAAP,MAAuB,aAAvB;AACA,OAAOC,KAAP,MAAkB,iBAAlB;AACA,SAASC,oBAAT,QAAqC,qCAArC;AACA,SAASC,WAAT,QAA4B,4BAA5B;AACA,SAASC,cAAT,QAA+B,+BAA/B;AAEA,eAAe,SAASC,OAAT,GAAoB;AACjC,QAAM;AAAEC,IAAAA;AAAF,MAAgBX,UAAU,CAACO,oBAAD,CAAhC;AACA,QAAM;AAAEK,IAAAA,IAAF;AAAQC,IAAAA,SAAR;AAAmBC,IAAAA,eAAnB;AAAoCC,IAAAA,WAApC;AAAiDC,IAAAA;AAAjD,MAA+DhB,UAAU,CAACQ,WAAD,CAA/E;AACA,QAAM;AAAES,IAAAA;AAAF,MAAmBjB,UAAU,CAACS,cAAD,CAAnC;AAEA,QAAM,CAACS,SAAD,EAAYC,QAAZ,IAAwBlB,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM,CAACmB,UAAD,EAAaC,aAAb,IAA8BpB,QAAQ,CAAC,IAAD,CAA5C,CANiC,CAOjC;;AACA,QAAM,CAACqB,UAAD,EAAaC,aAAb,IAA8BtB,QAAQ,CAAC,KAAD,CAA5C;AACA,QAAM,CAACuB,gBAAD,EAAmBC,mBAAnB,IAA0CxB,QAAQ,CAAC,EAAD,CAAxD;AACA,QAAM,CAACyB,aAAD,EAAgBC,gBAAhB,IAAoC1B,QAAQ,CAAC,KAAD,CAAlD;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACdc,IAAAA,SAAS,CAAC,CAAD,CAAT;AACAH,IAAAA,SAAS;AACV,GAHQ,EAGP,EAHO,CAAT;;AAKA,QAAMe,WAAW,GAAGC,EAAE,IAAI;AACxBR,IAAAA,aAAa,CAACQ,EAAD,CAAb;AACAZ,IAAAA,YAAY,CAACY,EAAD,CAAZ;AACAlB,IAAAA,SAAS,CAACkB,EAAD,CAAT;AACD,GAJD;;AAMA,QAAMC,eAAe,GAAG,MAAM;AAC5BX,IAAAA,QAAQ,CAAC,IAAD,CAAR;AACD,GAFD;;AAGA,QAAMY,gBAAgB,GAAG,MAAM;AAC7BZ,IAAAA,QAAQ,CAAC,KAAD,CAAR;AACAN,IAAAA,SAAS;AACV,GAHD;;AAKA,QAAMmB,WAAW,GAAG,MAClBpB,IAAI,CAACqB,GAAL,CAASC,GAAG,IAAI;AACd,wBACE;AACE,MAAA,GAAG,EAAEA,GAAG,CAACC,GADX;AAEE,MAAA,SAAS,EAAE,mBAAmBD,GAAG,CAACC,GAAJ,KAAYf,UAAZ,GAAyB,aAAzB,GAAwC,EAA3D,CAFb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAGE;AAAK,MAAA,SAAS,EAAC,OAAf;AAAuB,MAAA,OAAO,EAAE,MAAMQ,WAAW,CAACM,GAAG,CAACC,GAAL,CAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA6DD,GAAG,CAACE,KAAjE,CAHF,eAIE;AAAK,MAAA,SAAS,EAAC,WAAf;AAA2B,MAAA,OAAO,EAAE,MAAMtB,eAAe,CAACoB,GAAG,CAACC,GAAL,EAAUD,GAAG,CAACG,MAAd,CAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACC,oBAAC,MAAD;AAAQ,MAAA,KAAK,EAAC,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,CAJF,CADF;AAUD,GAXD,CADF;;AAcA,SAAOzB,IAAI,CAAC0B,MAAL,gBACL;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEE;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,YAAf;AAA4B,IAAA,GAAG,EAAEnC,IAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE;AAAG,IAAA,SAAS,EAAC,YAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAFF,CAFF,eAOE;AACE,IAAA,OAAO,EAAE2B,eADX;AAEE,IAAA,SAAS,EAAC,oBAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAPF,eAaE;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA;AACI,IAAA,SAAS,EAAE,eAAef,WAAW,KAAK,CAAhB,GAAoB,iBAApB,GAAuC,EAAtD,CADf;AAEI,IAAA,OAAO,EAAE,MAAMC,SAAS,CAAC,CAAD,CAF5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADA,eAOE;AAAM,IAAA,SAAS,EAAC,SAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAPF,eAQE;AACE,IAAA,SAAS,EAAE,eAAeD,WAAW,KAAK,CAAhB,GAAoB,iBAApB,GAAuC,EAAtD,CADb;AAEE,IAAA,OAAO,EAAE,MAAMC,SAAS,CAAC,CAAD,CAF1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eARF,CAbF,eA6BE;AAAI,IAAA,SAAS,EAAC,cAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACIgB,WAAW,EADf,CA7BF,eAiCE,oBAAC,UAAD;AACE,IAAA,SAAS,EAAC,eADZ;AAEE,IAAA,gBAAgB,EAAC,eAFnB;AAGE,IAAA,MAAM,EAAEd,SAHV;AAIE,IAAA,YAAY,EAAC,wBAJf;AAKE,IAAA,WAAW,EAAE,KALf;AAME,IAAA,cAAc,EAAEa,gBANlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAQE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARF,eASE;AAAQ,IAAA,SAAS,EAAC,YAAlB;AAA+B,IAAA,OAAO,EAAEA,gBAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aATF,CAjCF,CADK,gBA+CL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BADF,CA/CF;AAmDD","sourcesContent":["import React, { useContext, useState, useEffect } from 'react'\nimport logo from '../../assets/images/dd2.jpg'\nimport { GrSync } from 'react-icons/gr'\nimport ReactModal from 'react-modal';\nimport Modal from '../modals/Modal';\nimport { SelectedItemsContext } from '../../contexts/SelectedItemsContext'\nimport { CarsContext } from '../../contexts/CarsContext'\nimport { RepairsContext } from '../../contexts/RepairsContext'\n\nexport default function Sidebar () {\n  const { selectCar } = useContext(SelectedItemsContext)\n  const { cars, fetchCars, changeCarStatus, selectedTab, selectTab } = useContext(CarsContext)\n  const { fetchRepairs } = useContext(RepairsContext)\n\n  const [showModal, setModal] = useState(false)\n  const [activeLink, setActiveLink] = useState(null)\n  // const [selectedTab, setSelectedTab] = useState(null)\n  const [isCarExist, setIsCarExist] = useState(false)\n  const [searchInputValue, setSearchInputValue] = useState('')\n  const [isSearchLegit, setIsSearchLegit] = useState(false)\n\n  useEffect(() => {\n    selectTab(0)\n    fetchCars()\n  },[])\n\n  const handleClick = id => {\n    setActiveLink(id)\n    fetchRepairs(id)\n    selectCar(id)\n  }\n\n  const handleOpenModal = () => {\n    setModal(true)\n  }\n  const handleCloseModal = () => {\n    setModal(false)\n    fetchCars()\n  }\n\n  const displayCars = () =>\n    cars.map(car => {\n      return (\n        <li\n          key={car._id}\n          className={'sidebar-item ' + (car._id === activeLink ? 'active-item': '')}>\n          <div className=\"plate\" onClick={() => handleClick(car._id)}>{car.plate}</div>\n          <div className=\"changeBtn\" onClick={() => changeCarStatus(car._id, car.status,)}>\n           <GrSync color=\"red\" />\n          </div>\n        </li>\n      )\n    })\n\n  return cars.length ? (\n    <div className='sidebar'>\n\n      <div className=\"logo\">\n        <img className=\"logo-image\" src={logo}></img>\n        <p className=\"logo-label\">GaragePanel</p>\n      </div>\n\n      <button \n        onClick={handleOpenModal}\n        className='new btn btn-active'>\n        New\n      </button>\n\n      <div className='categories'>\n      <span\n          className={'category ' + (selectedTab === 0 ? 'active-category': '')}\n          onClick={() => selectTab(0)}\n        >\n          active\n        </span>\n        <span className='divider'> / </span>\n        <span\n          className={'category ' + (selectedTab === 1 ? 'active-category': '')}\n          onClick={() => selectTab(1)}\n        >\n          waiting\n        </span>\n      </div>\n\n      <ul className='sidebar-list'>\n        { displayCars() }\n      </ul>\n\n      <ReactModal \n        className=\"modal-wrapper\"\n        overlayClassName=\"modal-overlay\"\n        isOpen={showModal}\n        contentLabel=\"onRequestClose Example\"\n        ariaHideApp={false}\n        onRequestClose={handleCloseModal}\n      >\n        <Modal />\n        <button className=\"closeModal\" onClick={handleCloseModal}>close</button>\n      </ReactModal>\n    </div>\n  ) : (\n    <div>\n      <code>no cars in your garage!</code>\n    </div>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}